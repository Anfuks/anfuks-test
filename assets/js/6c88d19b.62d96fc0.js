"use strict";(self.webpackChunkminima_docs=self.webpackChunkminima_docs||[]).push([[8506],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>d});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=u(t),d=o,g=m["".concat(p,".").concat(d)]||m[d]||c[d]||i;return t?r.createElement(g,a(a({ref:n},l),{},{components:t})):r.createElement(g,a({ref:n},l))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2934:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:2},a="System Requirements",s={unversionedId:"runanode/systemrequirements",id:"runanode/systemrequirements",title:"System Requirements",description:"Minima is a lightweight blockchain that can be run on any Android device (version 9 or above), general purpose computer or server (VPS).",source:"@site/docs/runanode/systemrequirements.md",sourceDirName:"runanode",slug:"/runanode/systemrequirements",permalink:"/docs/runanode/systemrequirements",draft:!1,editUrl:"https://github.com/minima-global/minidocs/docs/runanode/systemrequirements.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Get started",permalink:"/docs/runanode/get_started"},next:{title:"Android (v9 and above)",permalink:"/docs/runanode/selectplatform/android_v9_and_up"}},p={},u=[{value:"Minimum hardware requirement",id:"minimum-hardware-requirement",level:2},{value:"Ports used",id:"ports-used",level:2},{value:"Incoming connections on server nodes:",id:"incoming-connections-on-server-nodes",level:3}],l={toc:u};function c(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"system-requirements"},"System Requirements"),(0,o.kt)("p",null,"Minima is a lightweight blockchain that can be run on any Android device (version 9 or above), general purpose computer or server (VPS)."),(0,o.kt)("p",null,"There is no minimum amount of Minima coins required to run a node."),(0,o.kt)("p",null,"The following information is for Server or Desktop users."),(0,o.kt)("h2",{id:"minimum-hardware-requirement"},"Minimum hardware requirement"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Processing:")," 2 CPU ",(0,o.kt)("br",null),"\n",(0,o.kt)("strong",{parentName:"p"},"Memory:")," 2GB RAM",(0,o.kt)("br",null),"\n",(0,o.kt)("strong",{parentName:"p"},"Storage:")," 2GB*"),(0,o.kt)("p",null,"*High MiniDapp usage may require higher availability of Storage"),(0,o.kt)("p",null,"GPU is not necessary"),(0,o.kt)("h2",{id:"ports-used"},"Ports used"),(0,o.kt)("p",null,"By default, Minima uses ports ",(0,o.kt)("strong",{parentName:"p"},"9001-9005"),", although an alternate 5-port range can be chosen by specifying a different main port on start up e.g. 8001."),(0,o.kt)("p",null,"If specifying a different main port e.g. 8001, the port range used will be the next consecutive 4 ports. e.g 8001-8005."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"9001 TCP")," (main port): The main Minima port, for peer-to-peer communication over Minima and Maxima"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"9002 TCP")," (or main port +1): Not currently used"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"9003 TCP")," (or main port +2): MiniDapp System (MDS) Web Server"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"9004 TCP")," (or main port +3): MiniDapp System (MDS) Command server "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"9005 TCP")," (or main port +4) : JSON-RPC over HTTP"),(0,o.kt)("p",null,"Desktop nodes are not required to configure any port forwarding to use Minima."),(0,o.kt)("h3",{id:"incoming-connections-on-server-nodes"},"Incoming connections on server nodes:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"9001"),": Server nodes should accept inbound and outbound connections on port 9001 (or other specified main port).\nIf this port is open, your node will be able to receive incoming and make outgoing connections, acting as a relay node.\nIf your inbound connection is closed, your node will only make outgoing connections."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"9002"),": Closed "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"9003"),": Must be open to use the MiniDapp System (MDS) outside of the server, otherwise can be closed to inbound connections."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"9004"),": Must be open to use the MiniDapp System (MDS) outside of the server, otherwise can be closed to inbound connections. "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"9005"),": The RPC Port must ",(0,o.kt)("strong",{parentName:"p"},"ALWAYS be closed")," to inbound connections"))}c.isMDXComponent=!0}}]);